"use strict";var e=Object.create,t=Object.defineProperty,n=Object.getOwnPropertyDescriptor,r=Object.getOwnPropertyNames,i=Object.getPrototypeOf,a=Object.prototype.hasOwnProperty,o=(e,i,o,s)=>{if(i&&typeof i==`object`||typeof i==`function`)for(var c=r(i),l=0,u=c.length,d;l<u;l++)d=c[l],!a.call(e,d)&&d!==o&&t(e,d,{get:(e=>i[e]).bind(null,d),enumerable:!(s=n(i,d))||s.enumerable});return e},s=(n,r,a)=>(a=n==null?{}:e(i(n)),o(r||!n||!n.__esModule?t(a,`default`,{value:n,enumerable:!0}):a,n));const c=s(require(`mermaid`)),l=({delay:e},t)=>{let n,r=!0,i=(...i)=>{r?(clearTimeout(n),n=setTimeout(()=>{r&&t(...i),n=void 0},e)):t(...i)};return i.isPending=()=>n!==void 0,i.cancel=()=>{r=!1},i.flush=(...e)=>t(...e),i},u=({delay:e=30,...t}={})=>{c.default.initialize({...t});let n=l({delay:e},()=>{c.default.run()});return e=>{let t=e.renderer.rules.fence;e.renderer.rules.fence=(e,r,i,a,o)=>{let s=e[r];return s.info===`mermaid`&&s.content?(n(),`<pre class="mermaid">${s.content}</pre>`):t?.(e,r,i,a,o)}}};var d=u;module.exports=d;