import { ref, onUnmounted } from "vue";
function useRecord({
  onError,
  onStart,
  onEnd,
  onResult
} = {}) {
  const loading = ref(false);
  const recognition = ref(null);
  const value = ref("");
  const start = () => {
    if ("webkitSpeechRecognition" in window) {
      recognition.value = new webkitSpeechRecognition();
      recognition.value.continuous = true;
      recognition.value.interimResults = true;
      recognition.value.lang = "zh-CN";
      recognition.value.onstart = () => {
        loading.value = true;
        value.value = "";
        onStart == null ? void 0 : onStart();
      };
      recognition.value.onend = () => {
        loading.value = false;
        onEnd == null ? void 0 : onEnd(value.value);
      };
      recognition.value.onerror = (e) => {
        loading.value = false;
        onError == null ? void 0 : onError(e);
      };
      recognition.value.onresult = (e) => {
        let results = "";
        for (let i = 0; i <= e.resultIndex; i++) {
          results += e.results[i][0].transcript;
        }
        value.value = results;
        onResult == null ? void 0 : onResult(results);
      };
      recognition.value.start();
    } else {
      onError == null ? void 0 : onError({
        code: -1,
        message: "The current browser does not support voice recognition"
      });
    }
  };
  const stop = () => {
    if (recognition.value) {
      recognition.value.stop();
    }
  };
  onUnmounted(() => {
    stop();
    recognition.value = null;
  });
  return {
    loading,
    start,
    stop,
    value
  };
}
export {
  useRecord
};
//# sourceMappingURL=useRecord.js.map
