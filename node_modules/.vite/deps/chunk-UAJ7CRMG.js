import {
  basePickBy,
  flatten
} from "./chunk-YQTLZH7V.js";
import {
  baseClone,
  hasIn
} from "./chunk-IH5FMJ33.js";
import {
  overRest,
  setToString
} from "./chunk-P22FNQEJ.js";

// node_modules/.pnpm/vue-element-plus-x@1.2.0_markdown-it@14.1.0_mermaid@11.12.0_typescript-api-pro@0.0.7_typescript@5.8.3/node_modules/vue-element-plus-x/dist/cloneDeep-BTtEY_-W.js
var CLONE_DEEP_FLAG = 1;
var CLONE_SYMBOLS_FLAG = 4;
function cloneDeep(value) {
  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}

// node_modules/.pnpm/vue-element-plus-x@1.2.0_markdown-it@14.1.0_mermaid@11.12.0_typescript-api-pro@0.0.7_typescript@5.8.3/node_modules/vue-element-plus-x/dist/pick-BGaY59Y-.js
function flatRest(func) {
  return setToString(overRest(func, void 0, flatten), func + "");
}
function basePick(object, paths) {
  return basePickBy(object, paths, function(value, path) {
    return hasIn(object, path);
  });
}
var pick = flatRest(function(object, paths) {
  return object == null ? {} : basePick(object, paths);
});

export {
  cloneDeep,
  pick
};
//# sourceMappingURL=chunk-UAJ7CRMG.js.map
